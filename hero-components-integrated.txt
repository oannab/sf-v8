// assets/js/components/heroes.jsx
import React, { useState, useEffect } from 'react';
import { ChevronLeft, ChevronRight } from 'lucide-react';

// Utility function to handle image paths
const getImagePath = (imageName) => `/images/${imageName}`;

export const MainCarousel = ({ slides }) => {
  const [currentSlide, setCurrentSlide] = useState(0);

  useEffect(() => {
    const timer = setInterval(() => {
      setCurrentSlide((prev) => (prev + 1) % slides.length);
    }, 5000);
    return () => clearInterval(timer);
  }, [slides.length]);

  return (
    <div className="relative h-screen overflow-hidden">
      {slides.map((slide, index) => (
        <div
          key={slide.id}
          className={`absolute inset-0 transition-opacity duration-1000 ${
            index === currentSlide ? 'opacity-100' : 'opacity-0'
          }`}
        >
          <div className="absolute inset-0 bg-black/50">
            <img
              src={getImagePath(slide.image)}
              alt={slide.title}
              className="w-full h-full object-cover"
            />
          </div>
          <div className="relative h-full flex items-center justify-center text-white px-6">
            <div className="text-center">
              <h1 className="text-6xl md:text-7xl font-light mb-6">{slide.title}</h1>
              <p className="text-xl max-w-2xl mx-auto mb-8">{slide.description}</p>
              <a
                href={slide.link}
                className="inline-block border border-white px-8 py-3 hover:bg-white hover:text-black transition duration-300"
              >
                {slide.buttonText}
              </a>
            </div>
          </div>
        </div>
      ))}
      <button
        onClick={() => setCurrentSlide((prev) => (prev - 1 + slides.length) % slides.length)}
        className="absolute left-6 top-1/2 -translate-y-1/2 text-white hover:opacity-75 z-10"
      >
        <ChevronLeft size={40} />
      </button>
      <button
        onClick={() => setCurrentSlide((prev) => (prev + 1) % slides.length)}
        className="absolute right-6 top-1/2 -translate-y-1/2 text-white hover:opacity-75 z-10"
      >
        <ChevronRight size={40} />
      </button>
    </div>
  );
};

export const SplitContentHero = ({ image, title, description, buttonText, buttonLink, imageLeft = true }) => {
  return (
    <div className="grid grid-cols-1 md:grid-cols-2 min-h-[60vh]">
      <div className={`${imageLeft ? 'md:order-1' : 'md:order-2'}`}>
        <img
          src={getImagePath(image)}
          alt={title}
          className="w-full h-full object-cover"
        />
      </div>
      <div className={`flex flex-col justify-center p-12 lg:p-24 ${imageLeft ? 'md:order-2' : 'md:order-1'}`}>
        <h2 className="text-4xl mb-6">{title}</h2>
        <p className="mb-8">{description}</p>
        <a
          href={buttonLink}
          className="inline-block border border-black px-8 py-3 hover:bg-black hover:text-white transition duration-300"
        >
          {buttonText}
        </a>
      </div>
    </div>
  );
};

export const FullWidthHero = ({ image, title, description }) => {
  return (
    <div className="relative h-[60vh]">
      <div className="absolute inset-0 bg-black/40">
        <img
          src={getImagePath(image)}
          alt={title}
          className="w-full h-full object-cover"
        />
      </div>
      <div className="relative h-full flex items-center justify-center text-white px-6">
        <div className="text-center max-w-4xl">
          <h2 className="text-4xl md:text-5xl mb-6">{title}</h2>
          <p className="text-xl">{description}</p>
        </div>
      </div>
    </div>
  );
};

export const GridGalleryHero = ({ title, items }) => {
  return (
    <div className="py-24">
      <div className="container mx-auto px-6">
        <h3 className="text-3xl mb-12">{title}</h3>
        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4">
          {items.map((item) => (
            <a
              key={item.id}
              href={item.link}
              className="block relative aspect-square group overflow-hidden"
            >
              <img
                src={getImagePath(item.image)}
                alt={item.title}
                className="w-full h-full object-cover transition-transform duration-500 group-hover:scale-110"
              />
              <div className="absolute inset-0 bg-black/40 opacity-0 group-hover:opacity-100 transition-opacity duration-300 flex items-center justify-center">
                <h4 className="text-white text-xl">{item.title}</h4>
              </div>
            </a>
          ))}
        </div>
      </div>
    </div>
  );
};
